<?php

namespace App\Models\Policies;

use NamespacedDummyUserModel;
use NamespacedDummyModel;

class DummyClass extends BasePolicy
{
    /**
     * 创建DummyModel权限
     *
     * @param  \NamespacedDummyUserModel  $user
     * @return mixed
     */
    public function create(DummyUser $user)
    {
        return true;
    }

    /**
     * 查看DummyModel权限
     *
     * @param  \NamespacedDummyUserModel  $user
     * @param  \NamespacedDummyModel  $dummyModel
     * @return mixed
     */
    public function view(DummyUser $user, DummyModel $dummyModel)
    {
        return $this->own($user, $dummyModel);
    }

    /**
     * 列表DummyModel权限
     *
     * @param  \NamespacedDummyUserModel  $user
     * @return mixed
     */
    public function viewAll(DummyUser $user)
    {
        return true;
    }

    /**
     * 修改DummyModel权限
     *
     * @param  \NamespacedDummyUserModel  $user
     * @param  \NamespacedDummyModel  $dummyModel
     * @return mixed
     */
    public function update(DummyUser $user, DummyModel $dummyModel)
    {
        return $this->own($user, $dummyModel);
    }

    /**
     * 删除DummyModel权限
     *
     * @param  \NamespacedDummyUserModel  $user
     * @param  \NamespacedDummyModel  $dummyModel
     * @return mixed
     */
    public function delete(DummyUser $user, DummyModel $dummyModel)
    {
        return $this->own($user, $dummyModel);
    }

    /**
     * 用户是否拥有DummyModel权限
     *
     * @param  \NamespacedDummyUserModel  $user
     * @param  \NamespacedDummyModel  $dummyModel
     * @return mixed
     */

    public function own(DummyUser $user, DummyModel $dummyModel)
    {
        return true;
    }

    /**
     * 列表条件
     * 指定用户对列表的权限
     *
     * @param \App\Models\User $user A user object against which to construct the query. By default, the currently logged in user is used.
     * @param \Illuminate\Database\Eloquent\Builder $query
     * @return \Illuminate\Database\Eloquent\Builder|null
     */
    public function qualifyCollectionQueryWithUser(User $user, $query)
    {
        return $query;
    }
}
